#include <WiFi.h> 
#include <WiFiClient.h> 
#include <PubSubClient.h>
#include <Ultrasonic.h>
#include <Wire.h>
//int kekeruhan = 36;


const char* ssid = "arifin";  
const char* password = "12345678";

const char* mqtt_server = "202.154.56.29"; 
const char* mqtt_user = "boby"; 
const char* mqtt_password = "tesis";


WiFiClient espClient;
PubSubClient client(espClient);

long duration;
int jarakAirdanSensor;
long tinggiBak;
float ketinggianAir;
long Volume;

#define echoPin 23
#define trigPin 22
#define kekeruhan 36


long lastMsg = 0;
char msg[20];


void receivedCallback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message received: ");
  Serial.println(topic);
  String payloadtemp;

  Serial.print("payload: ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
  Serial.println();

}

void mqttconnect() {

  while (!client.connected()) {
    Serial.print("MQTT connecting ...");

    String clientId = "ESP32Client";

    if (client.connect(clientId.c_str(), mqtt_user, mqtt_password)) {
      Serial.println("connected");
    } else{
      Serial.print("failed, status code =");
      Serial.print(client.state());
      Serial.println("try again in 5 seconds");

      delay(5000);
    }
  }

}



void setup() {
  Serial.begin(9600);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

    WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  

   pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  tinggiBak=20;

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
  client.setServer(mqtt_server, 1883);
  client.setCallback(receivedCallback);
}
void loop() {
  
  if (!client.connected()) {
    mqttconnect();
  }

  client.loop();
  
  int sensorValue = analogRead(kekeruhan);
  float voltage = sensorValue * (5.0 / 1024.0) - 5.5;
  Serial.println ("Sensor Output (V):");
  Serial.println (voltage);
  delay(1000);
    
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  
  
  jarakAirdanSensor = pulseIn(echoPin, HIGH);
  jarakAirdanSensor= jarakAirdanSensor*0.034/2;
  
  Serial.print("jarak air ke sensor: ");
  Serial.println(jarakAirdanSensor);
  delay(100);
  
  ketinggianAir = tinggiBak-jarakAirdanSensor;
  Serial.print("Tinggi air: ");
  Serial.println(ketinggianAir);
  delay(100);
  
  Volume = 3.14*49*ketinggianAir;
  Serial.print("Volume Air: ");
  Serial.println(Volume);
  delay(100);

  client.publish("boby/kekeruhan", String(voltage).c_str(), true);
  client.publish("boby/tinngiAir", String(ketinggianAir).c_str(), true);
  client.publish("boby/Volume", String(Volume).c_str(), true);

    long now = millis();
  if (now - lastMsg > 3000) {
    lastMsg = now;
  }
}
